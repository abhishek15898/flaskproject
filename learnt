User Login - 41:00 Part 6

Why to use relationship?
We have 2 models here - Project and Guide.
If no relationship:
  If I would like to render the name of the guide for a project then:
    I will need to create a query that selects the projects of a particular guide using the foreign key - guide_id
    Then I will have to pass the query in the template.
    OR
    I will have to pass all the guides and projects in to the templates.
With relationship:
  I dont need to query anything. I will simply have to pass the project into the template and
  use the relationship project.mentor.name to display the name of the mentor.
  The relationship actually binds the foreign key with the primary key.

formatted strings - f"
__repr()__
__str()__
packages
__init__.py in package
  flaskproject.models
  faskproject.forms
if elseif
slicing string (only 60 letters [ :60])
sort by desc

users = [
  {
    'name': 'Omkar',
    'email': 'edu.omkar@gmail.com'
  },
  {
    'name': 'Omkar',
    'email': 'edu.omkar@gmail.com'
  }
]
for user in users:
  recipent = user['email']

  Refer to : https://www.youtube.com/watch?v=48Eb8JuFuUI for Emails
  Flask's context processor
    Flask's context processor
  Flask WTForm made available to all the templates

F:\Flask_Project>python
Python 3.6.1 (v3.6.1:69c0db5, Mar 21 2017, 17:54:52) [MSC v.1900 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> from flaskproject import db
C:\Python\Python36-32\lib\site-packages\flask_sqlalchemy\__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
  'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '
>>> db.drop_all()
>>> db.create_all()
>>> exit()

migrations:
python run.py db init
python run.py db migrate
python run.py db upgrade

make changes
python run.py db migrate
python run.py db upgrade

Todo List: 11-05-2019 (12:00AM) (Deadline - 01:05 AM)(Finished at 01:10AM)
1) Make the Project Track Form available in all the templates. (15 min)
2) Get data from the input field into Routes. (10 min)
3) Convert the string data into int - id. (5 min)
4) Search the id (from the input field in routes) into the db. (15 min)
5) Fetch details from the db and display into another template.(15 min)
Yeaaaaaah Done!!! @1:10AM

Todo List: 12-05-2019 (6:00PM) Deadine - 7:00PM
1) Plan a design on how to arrange details in progress template. (15 min)
2) Button to add references and links.
Display following information:
1) Project Details
  - Project ID
  - Project title
  - Project Summary - Abstract
  - Date of Approval
  - Technology Used
  - References (link to References Tab)
2) Project Team (name, email, phone)
  - Guide
  - Project leader
  - Project members
3) Meetings (Modals)
  - Total Score
  - Date | Meeting No. | Score(Modal)  | Remarks(Modal)
  - Each Modal of Marks contains:
    - Date
    - progress
    - Designing
    - Logic
    - Parameter 5
    - Parameter 6
    - Total Marks
    - Remarks in Meeting 1
  - Each Modal of Remarks contains
    - Remark Title
    - Remarks Description
4) References Tab
  - Project Report (Google Drive Link)
  - Project Code (GitHub Link)
  - Project Timeline (Google Drive Link)
  - Other Links


Todo List: 10-06-2019 (10:45AM)
1) Create relationships between Project, Guide, Team, Student (Done)
2) Change the form. (30 mins) (10:35 - 11:05)(finished at 11:03AM)(Designing 11:10 - 11:40am  )
  2.1) Include all the necessary project details.
  2.2) Include Team Details
  2.3) Include Student details
  2.4) Submit the details and catch it at the route.
3) Fill the details in the database (30 mins) (5:00pm - 6:00pm ):
  3.0) Send the details to a new route and check for response.args.
  3.1) Check response.args data.
  3.2) Fill the team members details.
  3.3) Fill the database.
  3.4) Assign a guide to the team.
4) Change the frontend Design. (30 mins)
  4.1) Change the homescreen.
  4.2) Change the guide dashboard.
  4.3) Change the project details page.
  4.4) Change the guide page.
5) (Optional) Apply Jquery and AJAX for members feature.

Priority-1: Assign Marks and Grades to students(10:30am - 12:30pm)
1) Create a stable DB table #1 (10:30 - 10:40)
  1.1) The table should hold marks of both the guides(External+Internal)
  1.2) Ensure to also create table for Grades
2) Create a Form to Assign Marks #2 (10:40 - 10:55)
3) Create a Form to add Remarks #3 (10:55 - 11:10)
4) Add validations to the Form #6
5) Fetch the data into the Routes #4
6) Display it into the individual Projects - Progress #5
  6.1) Arrange data properly in the modal #7
  6.2) Internal + External Marks with Total-Average Auto-Calculated and Grades Auto-Calculated #8

Task for 27th Sept 2019:
Primary Focus: Get the students data from the website and display it on the website.
1) Generate password Reset link on Guide Email
  Generate a form - Username and New Password + Confirm Password
  Update the password
  Show trust that we store your password in encrypted form.
2) Formal Email Templates - Project Registration and Guide Registration
3) Deployment - mgmprojects.pythonanywhere.com
4) Register all the guides with their Email ID's on the Website
5) Provide a dropdown with all the guides names: External and Internal
6)Pagination and Table format of Projects
  Remove References Text on the website
  Notifications
  Timestamp Issue (System timestamp/ Local Timestamp)
6) Make all the users register on the website

Task for 30th Sept 2019:
1) Project Registration Form (PRIORITY - 1)(DONE)
  Include 2 fields - Internal Guide and External Guide
  Remove Why this field
2) Make changes in the Models: (PRIORITY - 2)
  Change status to stage:
    Total Stages:
      Stage - 0: Registered
      Stage - 1: Confirmed and Accepted (10 Score)
      Stage - 2: Abstract Submitted (10 Score)
      Stage - 3: Demo - 1 Done ( _ Score)
      Stage - 4: Demo - 2 Done ( _ Score)
      Stage - 5: Demo - 3 Done ( _ Score)
      Stage - 6: Report Submitted ( _ Score)
      Stage - 7: Finally Done! (Final Marks)
3) Pagination on the Projects (PRIORITY - 4)(Done)
4) Display all the projects (its Design) (PRIORITY - 3)(Done)
    Current - Stage
    Marks So far
5) Email Templates (PRIORITY - 5)
  Send email to guide as well as students (all)
  projectConfirmation(): Whether the project is confirmed or not?

Left over part ->
Project Confirmation Part - email + template for guide
Abstract Submission Part - email + template for guide and students
Email Templates
Custom Error Message:
  404 page
  Email Failed - mail.send(msg)

To-do list -> 05-10-2019
IMPORTANT: Ensure to fetch the systemdate and increment stages at every step
1) Confirm Page (TOP PRIORITY - 1)(Completed)
2) ../projectRegister (TOP PRIORITY - 2) (COMPLETED)
3) Email for 'Project Accepted' (TOP PRIORITY - 3)(Completed)
4) Static pages -> Under Construction (Priority 3)
5) Subscription Form -> Sidebar + Email (Priority 2)
6) Remove Password Reset link from the 500 error page (Priority 4)
7) Project Status - Abstract and Demo (Fix it!)
8) Deployment

Bug found -> Team members not displaying
